#!/bin/sh
#
# This hook verifies that the commit message is Conventional Commits valid

function logMessage(){
	echo -e "${RED} \n###### Message de commit non conforme ######\n"
	echo -e "${RED} \nPour ignorer ce hook: git commit --no-verify\n"
	echo "$1"
}

RED=$(tput setaf 1)
REGEX_LINE_1="^(fix|feat|BREAKING CHANGE|chore|docs|style|refactor|perf|test|improvement)(\(.+\))?: .*$"
REGEX_LINE_2="^\s*$"

file=`cat $1` # The file that contains the commit message

FILE_WITHOUT_COMMENTS=$(sed '/^[[:blank:]]*#/d;s/#.*//' <<< $file)
FULL_FILE=$FILE_WITHOUT_COMMENTS

LINE_NUMBER=1;
NUMBER_OF_LINES=$(echo "$FILE_WITHOUT_COMMENTS" | grep ^ | wc -l)

while read -r line; do
	if [[ $LINE_NUMBER = 1 && !($line =~ $REGEX_LINE_1) ]] ; then
    	logMessage "$FULL_FILE"
		exit 1
	fi
	if [[ $NUMBER_OF_LINES -gt 1 ]] ; then

		if [[ $LINE_NUMBER = 2 && !($line =~ $REGEX_LINE_2) ]] ; then
			logMessage "$FULL_FILE"
			exit 1
		fi
	fi
	((LINE_NUMBER++))
done <<< "$FILE_WITHOUT_COMMENTS"

exit 0